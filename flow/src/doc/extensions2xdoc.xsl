<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
>
	<xsl:output method="xml" indent="yes" />

    <xsl:template match="/">
      <xsl:apply-templates />
    </xsl:template>
    
	<xsl:template match="extensions">
<document url="extensions.html">
  <xsl:comment>
    WARNING: This file is automatically generated from an xdoclet extension that
    turns javadoc tags in the extensions Java source code into an xml file,
    which is then processed by an xsl file to create this document. Do not
    modify this file, but rather either modify the comments or xsl file.
  </xsl:comment>
  <properties>
    <title>Java API Extensions</title>
  </properties>
  <body>
    <section name="Java API Extensions" href="summary">
    
      <p>
        Struts Flow adds properties and methods to Java API classes to make using the Java API easier in the flow scripts.  Each documented extension listed here includes a description and example of its use.
      </p>
      <xsl:for-each select="class">
        <strong><xsl:value-of select="name" /></strong>
        <blockquote>
          <table>
        <xsl:for-each select="method">
            <tr>
              <td><code><xsl:value-of select="type" /></code></td>
              <td>
                <strong><code><a href="#{../name}_{name}"><xsl:value-of select="name" /></a>(<xsl:value-of select="params" />)</code></strong>
                <br /><dd><xsl:value-of select="firstSentence" /></dd></td>
             </tr>   
        </xsl:for-each>
           </table>
        </blockquote>
     </xsl:for-each>
    </section>
      <xsl:apply-templates select="class" />
  </body>
</document>
    </xsl:template>
    

    <xsl:template match="class">
      <section name="{name}" href="cls_{name}">
        <xsl:apply-templates />
      </section>
    </xsl:template>
    
    <xsl:template match="method">
      <section name="{name}" href="{../name}_{name}">
<pre>
    <xsl:value-of select="concat(type,' ',name,'(',params,')')" />
</pre>
          <p><xsl:value-of select="comment" disable-output-escaping="yes"/>
          </p>
          <dl>
            <dt><strong>Example:</strong></dt>
            <dd><code><xsl:value-of select="example"  disable-output-escaping="yes"/></code></dd>
          </dl>
      </section>
    </xsl:template>
    
    <xsl:template match="text()" />
    
</xsl:stylesheet>
